openapi: 3.0.1
info:
  title: Phrase Recorder API
  description: This is the API for the Phrase Recorder App.
  termsOfService: http://swagger.io/terms/
  contact:
    email: gdavidson1107@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://indigenous-test.io/v1
tags:
  - name: phrase
    description: Operations with phrases
  - name: user
    description: Operations with users
  - name: userPhrase
    description: Operations with UserPhrase objects.
  - name: phraseSet
    description: Operations with PhraseSet objects
  - name: userPhraseComment
    description: Operations with UserPhraseComment objects
  - name: userPhraseCount
    description: Operations with userPhraseCount objects
  - name: userPhraseWithAudio
    description: Operations with userPhraseWithAudio objects
paths:
  ## PHRASE
  /phrase:
    post:
      tags:
        - phrase
      summary: Add a new phrase to the Database
      operationId: addPhrase
      requestBody:
        description: Phrase object that needs to be added to the Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phrase'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
        "405":
          description: Invalid input
          content: {}
      x-codegen-request-body-name: phrase
      x-openapi-router-controller: swagger_server.controllers.PhraseController
  /phrase/{phraseId}:
    post:
      tags:
        - phrase
      summary: Gets a phrase with a given phraseId from the Database.
      operationId: getPhraseById
      parameters:
        - name: phraseId
          in: path
          description: The phraseId of the phrase you want to fetch from the Database
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
        "405":
          description: Invalid input
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: phrase
      x-openapi-router-controller: swagger_server.controllers.PhraseController
  /phrase/batchGet:
    post:
      tags:
        - phrase
      summary: Gets Phrase objects in a list from a provided list of phraseIds from the Database.
      operationId: getAllPhrasesByIds
      requestBody:
        description: List of phraseIds
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
        "405":
          description: Invalid input
          content: { }
        "404":
          description: Not found
          content: { }
      x-codegen-request-body-name: phrase
      x-openapi-router-controller: swagger_server.controllers.PhraseController

  ## USER
  /user:
    put:
      tags:
        - user
      summary: Edits user with given info
      operationId: updateUser
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Successful operation
          content: {}
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.UserController
    post:
      tags:
        - user
      summary: Creates user with given info
      operationId: addUser
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "405":
          description: Invalid input
          content: {}
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.UserController
  /user/{userId}:
    delete:
      tags:
        - user
      summary: Delete an existing user
      operationId: delete_user
      parameters:
        - name: userId
          in: path
          description: The userId of the user you want to delete from the Database
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content: {}
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: User not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: userId
      x-openapi-router-controller: swagger_server.controllers.UserController

    post:
      tags:
        - user
      summary: Gets user with given userId
      operationId: getUser
      parameters:
        - name: userId
          in: path
          description: The userId of the user you want to delete from the Database
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.UserController


  ### USER PHRASE
  /userPhrase:
    post:
      tags:
        - userPhrase
      summary: Saves a userPhrase to db
      operationId: addUserPhrase
      requestBody:
        description: UserPhrase object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPhrase'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPhrase'
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.UserPhraseController

  /file:
    post:
      tags:
        - userPhraseWithAudio
      summary: Saves a voice recording to bucket for a particular user
      operationId: saveAudioFileToBucket
      requestBody:
        description: UserPhraseWithAudioFile object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPhraseWithAudioFile'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPhrase'
        "405":
          description: Validation exception
          content: { }
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.BucketStorageController
  /file/{keypath}:
    post:
      tags:
        - userPhraseWithAudio
      summary: Gets file from bucket with given keypath
      operationId: getFileFromBucket
      parameters:
        - name: keypath
          in: path
          description: The path of the file you want to fetch from the bucket.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-openapi-router-controller: swagger_server.controllers.BucketStorageController



  /userPhrase/{userPhraseId}:
    post:
      tags:
        - userPhrase
      summary: Get a userPhrase by ID from the db
      operationId: getUserPhraseById
      parameters:
        - name: userPhraseId
          in: path
          description: The userPhraseID of the userPhrase you want to fetch
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPhrase'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: UserPhrase not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.UserPhraseController


  ## Phrase Set
  /phraseSet:
    post:
      tags:
        - phraseSet
      summary: Add a new phraseSet to the Database
      operationId: addPhraseSet
      requestBody:
        description: PhraseSet object that needs to be added to the Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhraseSet'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhraseSet'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: PhraseSet not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: phraseSet
      x-openapi-router-controller: swagger_server.controllers.PhraseSetController
  /phraseSet/{phraseSetId}:
    post:
      tags:
        - phraseSet
      summary: Get a phraseSet by Id
      operationId: getPhraseSet
      parameters:
        - name: phraseSetId
          in: path
          description: The phraseSet Id you want to get
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhraseSet'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: PhraseSet not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: phraseSet
      x-openapi-router-controller: swagger_server.controllers.PhraseSetController

  ##UserPhraseCount

  /phraseIds:
    post:
      tags:
        - userPhraseCount
      summary: get All Remaining PhraseIds For A User And PhraseSet
      operationId: getAllRemainingPhraseIdsForAUserAndPhraseSet
      requestBody:
        description: PhraseRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhraseRequest'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int64


        "400":
          description: Invalid ID supplied
          content: { }
        "404":
          description: Not found
          content: { }
        "405":
          description: Validation exception
          content: { }
      x-codegen-request-body-name: phraseRequest
      x-openapi-router-controller: swagger_server.controllers.UserPhraseCountController



  ## USER PHRASE COMMENT
  /userPhraseComment:
    post:
      tags:
        - userPhraseComment
      summary: Add a new UserPhraseComment to the Database
      operationId: addUserPhraseComment
      requestBody:
        description: UserPhraseComment object that needs to be added to the Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPhraseComment'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPhraseComment'
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: UserPhraseComment
      x-openapi-router-controller: swagger_server.controllers.UserPhraseController

  /userPhraseComment/{userPhraseCommentId}:

    post:
      tags:
        - userPhraseComment
      summary: Get a UserPhraseComment by Id
      operationId: getUserPhraseComment
      parameters:
        - name: userPhraseCommentId
          in: path
          description: The Id of UserPhraseComment you want to get
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPhraseComment'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: UserPhraseComment not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: UserPhraseComment
      x-openapi-router-controller: swagger_server.controllers.UserPhraseController


components:
  schemas:
    Phrase:
      type: object
      properties:
        id:
          type: integer
          format: int64
        phraseSetId:
          type: integer
          format: int64
        original:
          type: string
        translation:
          type: string
        exampleRecordingPath:
          type: string
          format: uri
      xml:
        name: Phrase
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        project:
          type: string
      xml:
        name: User
    UserPhrase:
      type: object
      properties:
        id:
          type: integer
          format: int64
        phraseId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        dateTime:
          type: string
          format: date-time
        filepath:
          type: string
          format:  binary
        ## mp4, mp3, ogg vorbis, wav
        ## hex encoded binary string (b64)
        ## add param to tell what kind of file it is, so like (binaryString, wav)
      xml:
        name: UserPhrase
    PhraseSet:
      type: object
      properties:
        id:
          type: integer
          format: int64
        phraseSetName:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
      xml:
        name: PhraseSet

    UserPhraseComment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        phraseId:
          type: integer
          format: int64
        comment:
          type: string
        dateTime:
          type: string
          format: date-time
        userId:
          type: integer
          format: int64
      xml:
        name: UserPhraseComment
    UserPhraseWithAudioFile:
      type: object
      properties:
        userPhrase:
          $ref: '#/components/schemas/UserPhrase'
        file:
          type: string
          format: byte
      xml:
        name: UserPhraseWithAudioFile
    PhraseRequest:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        phraseSetId:
          type: integer
          format: int64
      xml:
        name: PhraseRequest










