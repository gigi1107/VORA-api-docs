openapi: 3.0.1
info:
  title: Phrase Recorder API
  description: This is the API for the Phrase Recorder App.
  termsOfService: http://swagger.io/terms/
  contact:
    email: gigi.r.davidson@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://{domain}/{basePath}
    description: Servers
    variables:
      domain:
        enum:
          - "raiv-beta.first-languages-beta.com"
        default: 'raiv-beta.first-languages-beta.com'
      basePath:
        default: v1
  - url: http://localhost:8080/v1
    description: local dev
security:
  - bearerAuth: [ ]

tags:
  - name: user
    description: Operations with users
  - name: userPhraseComment
    description: Operations with UserPhraseComment objects
  - name: audio
    description: Operations with buckets
  - name: phraseSubset
    description: Operations with phraseSubset objects
  - name: userSecurity
    description: Operations with userSecurity objects
paths:
  /service/status:
    get:
      summary: Public Healthcheck endpoint for the service to determine if it's up and running and broadly reachable.
      responses:
        "200":
          description: Successful operation
          content: { }
    x-openapi-router-controller: swagger_server.controllers.BucketStorageController


  ## USER
  /user:
    put:
      tags:
        - user
      summary: Edits user with given info
      operationId: updateUser
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: Successful operation
          content: { }
        "404":
          description: User not found
          content: { }
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.UserController
    post:
      tags:
        - user
      summary: Creates user with given info
      operationId: addUser
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "405":
          description: Invalid input
          content: { }
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.UserController

    get:
      tags:
        - user
      operationId: getUserByEmail
      summary: gets a user by their email
      parameters:
        - name: email
          in: query
          description: email
          required: true
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
          content: { }
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.UserController




  /user/{userId}:
    get:
      tags:
        - user
      summary: Gets user with given userId
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: The userId of the user you want to delete from the Database
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.UserController

  #AUDIO FILE ACTIONS
  /audioFile:
    post:
      tags:
        - audio
      summary: Saves a WAV file to the S3 bucket, and saves the metadata and reference to the file in the database.
      operationId: saveAudioContentToBucket
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Audio file in WAV format
                hash:
                  type: string
                  description: Hash value as a string
              required:
                - file
                - hash
        required: true
      responses:
        "200":
          description: File uploaded successfully and information saved to Database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPhrase'
        "400":
          description: Bad request. Could be a corrupted or empty file.
          content: { }
        "409":
          description: Conflict. An identically named recording was already saved to the database.
          content: { }
        "405":
          description: Validation exception
          content: { }
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.BucketStorageController

  /audioFile/language/{languageAbbrev}/phrase/{phraseId}:
    get:
      tags:
        - audio
      summary: Gets WAV file from bucket with given phraseId
      operationId: getAudioFromBucket
      parameters:
        - in: path
          name: languageAbbrev
          schema:
            type: string
          description: The target language's abbreviation
          required: true
        - in: path
          name: phraseId
          schema:
            type: string
          description: The phraseId you want an example of
          required: true
      responses:
        '200':
          description: Successful response, and a WAV audio file
          content:
            audio/wav:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Attachment; filename="<filename>.wav"
              schema:
                type: string
        '404':
          description: Error, file not found.
          content: { }
        '400':
          description: Bad request
          content: { }

      x-openapi-router-controller: swagger_server.controllers.BucketStorageController

  /audioFiles/language/{languageAbbrev}:
    get:
      tags:
        - audio
      summary: Gets a ZIP of wav files from bucket with the given phraseId List
      operationId: getFilesFromBucket
      parameters:
        - in: path
          name: languageAbbrev
          schema:
            type: string
          required: true
        - in: query
          name: phraseIdList
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          required: true
      responses:
        '200':
          description: A ZIP file containing multiple WAV audio files.
          content:
            application/zip:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: "Attachment; filename=\"phrases.zip\""
              schema:
                type: string
        '400':
          description: Error, request invalid.
      x-openapi-router-controller: swagger_server.controllers.BucketStorageController


  ## Phrase Subset
  /phraseSubset/{phraseSubsetId}:
    get:
      tags:
        - phraseSubset
      summary: This is the API that will fetch the next phrase group for the client, where the client must provide the phraseGroupID it wants to fetch. A response shall be a PhraseSubset response, which is an id, a description, and a list of Phrases.
      operationId: getPhraseSubset
      parameters:
        - name: phraseSubsetId
          in: path
          description: Numeric ID of the phrase Group to get. Client must track this number so as to fetch the correct one.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhraseSubset"
        "400":
          description: Invalid ID supplied
          content: { }
        "404":
          description: PhraseSubset not found
          content: { }
        "405":
          description: Validation exception
          content: { }
      x-codegen-request-body-name: phraseSubset
      x-openapi-router-controller: swagger_server.controllers.PhraseSubsetController


  /phraseSubsets:
    get:
      tags:
        - phraseSubset
      summary: This method fetches all the phraseGroups in a paged manner. By default, it fetches the first page and sets a page size of five items.
      operationId: getAllPhraseSubsets
      parameters:
        - name: pageNumber
          in: query
          description: The page number you wish fetched. E.g., to fetch the first page, specify 0. The default is 0.
          required: true
          schema:
            type: integer
        - name: size
          in: query
          description: The number of items on each page. The default is 5.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhraseSubsetsPagedResponse"
        "400":
          description: Invalid parameter values supplied
          content: { }
        "405":
          description: Validation exception
          content: { }
        "500":
          description: Internal server error
          content: { }
    x-codegen-request-body-name: PhraseSubset
    x-openapi-router-controller: swagger_server.controllers.PhraseSubsetController


  ## USER PHRASE COMMENT
  /userPhraseComment:
    post:
      tags:
        - userPhraseComment
      summary: Add a new UserPhraseComment to the Database
      operationId: addUserPhraseComment
      requestBody:
        description: UserPhraseComment object that needs to be added to the Database
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPhraseComment"
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPhraseComment"
        "405":
          description: Validation exception
          content: { }
      x-codegen-request-body-name: UserPhraseComment
      x-openapi-router-controller: swagger_server.controllers.UserPhraseCommentController

  ## USER SECURITY
  /user/pin:
    post:
      tags:
        - userSecurity
      summary: add a new user pin and other security info to the database, associated with a user.
      operationId: addUserSecurity
      requestBody:
        description: UserSecurity object that needs to be added to the Database
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSecurity"
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSecurity"
        "400":
          description: Validation exception
          content: { }
      x-codegen-request-body-name: UserSecurity
      x-openapi-router-controller: swagger_server.controllers.UserSecurityController

  /user/{userId}/security:
    get:
      tags:
        - userSecurity
      summary: Fetches UserSecurity from the database given a userid
      operationId: getUserSecurityByUserId
      parameters:
        - name: userId
          in: path
          description: The user Id of the pin you want to get.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSecurity"
        "404":
          description: Not found
          content: { }
        x-codegen-request-body-name: UserSecurity
        x-openapi-router-controller: swagger_server.controllers.UserSecurityController
  /user/{userId}/pin:
    put:
      tags:
        - userSecurity
      summary: Updates a user's pin
      operationId: updateUserPin
      requestBody:
        description: The new pin
        content:
          application/json:
            schema:
              type: integer
      parameters:
        - name: userId
          in: path
          description: The user Id of the pin you want to get.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSecurity"
        "404":
          description: Not found
          content: { }
        x-codegen-request-body-name: UserSecurity
        x-openapi-router-controller: swagger_server.controllers.UserSecurityController

  /user/{userId}/pin/validate:
    get:
      tags:
        - userSecurity
      summary: Validates a pin against a given userid
      operationId: validateUserPin
      parameters:
        - in: query
          name: userPin
          schema:
            type: string
          description: pin you want to validate
          required: true
        - in: path
          name: userId
          schema:
            type: string
          description: The userId of the pin you want to validate
          required: true
      responses:
        "200":
          description: Successful Operation - Authorized
          content: { }
        "401":
          description: Unauthorized- this is the response if the validation fails. Client should respond accordingly.
          content: { }
        x-codegen-request-body-name: UserSecurity
        x-openapi-router-controller: swagger_server.controllers.UserSecurityController



components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Phrase:
      type: object
      properties:
        id:
          type: integer
          nullable: false
        phraseSetId:
          type: integer
          nullable: false
        original:
          type: string
          nullable: false
        translation:
          type: string
          nullable: true
        exampleRecordingPath:
          type: string
          format: uri
          nullable: true
        enabled:
          type: boolean
          nullable: true
        languageId:
          type: integer
          nullable: false
      xml:
        name: Phrase
    User:
      type: object
      properties:
        id:
          type: integer
          nullable: false
        languageId:
          type: integer
          nullable: false
        firstName:
          type: string
          nullable: false
        lastName:
          type: string
          nullable: false
        email:
          type: string
          format: email
          nullable: false
        phraseSubsetIndex:
          type: integer
          nullable: true
        project:
          type: string
          nullable: true
        age:
          type: integer
          nullable: true
        gender:
          type: string
          enum: [ MALE, FEMALE, OTHER, DECLINE ]
          nullable: true
        geographicLocation:
          type: string
          nullable: true
        firstLanguage:
          type: string
          nullable: true
        fluency:
          type: string
          enum: [ FLUENT, WORKING_FLUENCY, LIMITED_FLUENCY, NONE ]
          nullable: true
        education:
          type: string
          enum:
            [
              LESS_THAN_HIGH_SCHOOL,
              HIGH_SCHOOL,
              VOCATIONAL,
              SOME_COLLEGE,
              COLLEGE,
              POSTGRADUATE,
            ]
          nullable: true
        priorMinCourseTraining:
          type: string
          enum: [ COMPLETED, WORKING, NONE ]
          nullable: true
        speechDisorders:
          type: boolean
          nullable: true
      xml:
        name: User
    UserPhrase:
      type: object
      properties:
        id:
          type: integer
          nullable: false
        phraseId:
          type: integer
          nullable: false
        userId:
          type: integer
          nullable: false
        fileHash:
          type: string
          nullable: true
        fileIsValid:
          type: boolean
        recordedTime:
          type: string
          format: date-time
          nullable: false
        uploadTime:
          type: string
          format: date-time
          nullable: false
        filePath:
          type: string
          nullable: true
      xml:
        name: UserPhrase

    PhraseSubset:
      type: object
      properties:
        id:
          type: integer
          nullable: false
        description:
          type: string
          nullable: false
        phraseList:
          type: array
          nullable: false
          items:
            $ref: "#/components/schemas/Phrase"
      xml:
        name: PhraseSubset
    UserPhraseComment:
      type: object
      properties:
        id:
          type: integer
          nullable: false
        phraseId:
          type: integer
          nullable: true
        comment:
          type: string
          nullable: true
        dateTime:
          type: string
          format: date-time
          nullable: false
        userId:
          type: integer
          nullable: true
      xml:
        name: UserPhraseComment

    UserSecurity:
      type: object
      properties:
        id:
          type: integer
          nullable: false
        userId:
          type: integer
          nullable: false
        pin:
          type: integer
          nullable: false
        isAdmin:
          type: boolean
        email:
          type: string
      xml:
        name: UserSecurity
    PhraseSubsetsPagedResponse:
      type: object
      properties:
        totalPages:
          type: integer
          nullable: false
        totalElements:
          type: integer
          nullable: false
        content:
          type: array
          nullable: false
          items:
            $ref: "#/components/schemas/PhraseSubset"
      xml:
        name: PhraseSubsetsPagedResponse

