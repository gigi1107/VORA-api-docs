openapi: 3.0.1
info:
  title: Phrase Recorder API
  description: This is the API for the Phrase Recorder App.
  termsOfService: http://swagger.io/terms/
  contact:
    email: gigi.r.davidson@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
tags:
  - name: user
    description: Operations with users
  - name: userPhraseComment
    description: Operations with UserPhraseComment objects
  - name: bucket
    description: Operations with the buckets
  - name: phraseSubset
    description: Operations with phraseSubset objects
  - name: userPin
    description: Operations with userPin objects
paths:
  /ping:
    get:
      tags:
        - bucket
      summary: Healthcheck endpoint for the service to determine if it's up and running and broadly reachable.
      responses:
        "200":
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
    x-openapi-router-controller: swagger_server.controllers.BucketStorageController


  ## USER
  /user:
    put:
      tags:
        - user
      summary: Edits user with given info
      operationId: updateUser
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: Successful operation
          content: { }
        "404":
          description: User not found
          content: { }
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.UserController
    post:
      tags:
        - user
      summary: Creates user with given info
      operationId: addUser
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "405":
          description: Invalid input
          content: { }
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.UserController

    get:
      tags:
        - user
      summary: gets a user by first and last name
      parameters:
        - name: first
          in: query
          description: First name
          required: true
          explode: false
          schema:
            type: integer
        - name: last
          in: query
          description: last name
          required: true
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
          content: { }
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.UserController




  /user/{userId}:
    get:
      tags:
        - user
      summary: Gets user with given userId
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: The userId of the user you want to delete from the Database
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.UserController

  #AUDIO FILE ACTIONS
  /audioFile:
    post:
      tags:
        - bucket
      summary: Saves a voice recording to bucket for a particular user
      operationId: saveAudioContentToBucket
      requestBody:
        description: userPhraseWithAudioContent object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPhraseWithAudioContent'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPhrase'
        "405":
          description: Validation exception
          content: { }
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.BucketStorageController

    get:
      tags:
        - bucket
      summary: Gets file from bucket with given keypath
      operationId: getAudioFromBucket
      parameters:
        - in: query
          name: phraseId and Example path object
          schema:
            $ref: '#/components/schemas/PhraseIdAndExamplePath'

          description: The phraseId and example path associated with the audio
          required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhraseIdAndAudioContents'
      x-openapi-router-controller: swagger_server.controllers.BucketStorageController

  /audioFiles:
    get:
      tags:
        - bucket
      summary: Gets files from bucket with the given keypaths and phraseIds
      operationId: getFilesFromBucket
      parameters:
        - in: query
          name: A Phrase list for which you want the example audio
          schema:
            $ref: '#/components/schemas/PhraseList'

          required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhraseIdAndAudioContents'
      x-openapi-router-controller: swagger_server.controllers.BucketStorageController


  ## Phrase Subset
  /phraseSubset/{phraseSubsetId}:
    get:
      tags:
        - phraseSubset
      summary: This is the API that will fetch the next phrase group for the client, where the client must provide the phraseGroupID it wants to fetch. A response shall be a PhraseSubset response, which is an id, a description, and a list of Phrases.
      operationId: getPhraseSubset
      parameters:
        - name: phraseSubsetId
          in: path
          description: Numeric ID of the phrase Group to get. Client must track this number so as to fetch the correct one.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhraseSubset"
        "400":
          description: Invalid ID supplied
          content: { }
        "404":
          description: PhraseSubset not found
          content: { }
        "405":
          description: Validation exception
          content: { }
      x-codegen-request-body-name: phraseSubset
      x-openapi-router-controller: swagger_server.controllers.PhraseSubsetController


  /phraseSubsets:
    get:
      tags:
        - phraseSubset
      summary: This method fetches all the phraseGroups in a paged manner. By default, it fetches the first page and sets a page size of five items.
      operationId: getAllPhraseSubsets
      parameters:
        - name: pageNumber
          in: query
          description: The page number you wish fetched. E.g., to fetch the first page, specify 0. The default is 0.
          required: true
          schema:
            type: integer
        - name: size
          in: query
          description: The number of items on each page. The default is 5.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhraseSubsetsPagedResponse"
        "400":
          description: Invalid parameter values supplied
          content: { }
        "405":
          description: Validation exception
          content: { }
        "500":
          description: Internal server error
          content: { }
    x-codegen-request-body-name: PhraseSubset
    x-openapi-router-controller: swagger_server.controllers.PhraseSubsetController


  ## USER PHRASE COMMENT
  /userPhraseComment:
    post:
      tags:
        - userPhraseComment
      summary: Add a new UserPhraseComment to the Database
      operationId: addUserPhraseComment
      requestBody:
        description: UserPhraseComment object that needs to be added to the Database
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPhraseComment"
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPhraseComment"
        "405":
          description: Validation exception
          content: { }
      x-codegen-request-body-name: UserPhraseComment
      x-openapi-router-controller: swagger_server.controllers.UserPhraseCommentController

  ## USER PIN
  /user/pin:
    post:
      tags:
        - userPin
      summary: add a new user pin to the database, associated with a user.
      operationId: addUserPin
      requestBody:
        description: UserPin object that needs to be added to the Database
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPin"
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPin"
        "400":
          description: Validation exception
          content: { }
      x-codegen-request-body-name: UserPin
      x-openapi-router-controller: swagger_server.controllers.UserPinController

  /user/{userId}/pin:
    get:
      tags:
        - userPin
      summary: Fetches a userpin from the database given a userid
      operationId: getPinByUserId
      parameters:
        - name: userId
          in: path
          description: The user Id of the pin you want to get.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPin"
        "404":
          description: Not found
          content: { }
        x-codegen-request-body-name: UserPin
        x-openapi-router-controller: swagger_server.controllers.UserPinController

    put:
      tags:
        - userPin
      summary: Updates a user's pin
      operationId: updateUserPin
      requestBody:
        description: The new pin
        content:
          application/json:
            schema:
              type: integer
      parameters:
        - name: userId
          in: path
          description: The user Id of the pin you want to get.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPin"
        "404":
          description: Not found
          content: { }
        x-codegen-request-body-name: UserPin
        x-openapi-router-controller: swagger_server.controllers.UserPinController

  /user/pin/validate:
    get:
      tags:
        - userPin
      summary: Validates a pin against a given userid
      operationId: validateUserPin
      parameters:
        - in: query
          name: userPin
          schema:
            $ref: '#/components/schemas/UserPin'
          description: The userId and pin combo you want to validate
          required: true

      responses:
        "200":
          description: Successful Operation - Authorized
          content: { }
        "401":
          description: Unauthorized- this is the response if the validation fails. Client should respond accordingly.
          content: { }
        x-codegen-request-body-name: UserPin
        x-openapi-router-controller: swagger_server.controllers.UserPinController



components:
  schemas:
    Phrase:
      type: object
      properties:
        id:
          type: integer
          nullable: false
        phraseSetId:
          type: integer
          nullable: false
        original:
          type: string
          nullable: false
        translation:
          type: string
          nullable: true
        exampleRecordingPath:
          type: string
          format: uri
          nullable: true
        enabled:
          type: boolean
          nullable: true
        languageId:
          type: integer
          nullable: false
      xml:
        name: Phrase
    User:
      type: object
      properties:
        id:
          type: integer
          nullable: false
        languageId:
          type: integer
          nullable: false
        firstName:
          type: string
          nullable: false
        lastName:
          type: string
          nullable: false
        email:
          type: string
          format: email
          nullable: false
        phraseSubsetIndex:
          type: integer
          nullable: true
        project:
          type: string
          nullable: true
        age:
          type: integer
          nullable: true
        gender:
          type: string
          enum: [ MALE, FEMALE, OTHER, DECLINE ]
          nullable: true
        geographicLocation:
          type: string
          nullable: true
        firstLanguage:
          type: string
          nullable: true
        fluency:
          type: string
          enum: [ FLUENT, WORKING_FLUENCY, LIMITED_FLUENCY, NONE ]
          nullable: true
        education:
          type: string
          enum:
            [
              LESS_THAN_HIGH_SCHOOL,
              HIGH_SCHOOL,
              VOCATIONAL,
              SOME_COLLEGE,
              COLLEGE,
              POSTGRADUATE,
            ]
          nullable: true
        priorMinCourseTraining:
          type: string
          enum: [ COMPLETED, WORKING, NONE ]
          nullable: true
        speechDisorders:
          type: boolean
          nullable: true
        userType:
          type: string
          enum:
            [
              SUPER,
              REGULAR,
              DEPENDENT
            ]
          nullable: true
      xml:
        name: User
    UserPhrase:
      type: object
      properties:
        id:
          type: integer
          nullable: false
        phraseId:
          type: integer
          nullable: false
        userId:
          type: integer
          nullable: false
        fileHash:
          type: string
          nullable: true
        fileIsValid:
          type: boolean
        recordedTime:
          type: string
          format: date-time
          nullable: false
        uploadTime:
          type: string
          format: date-time
          nullable: false
        filePath:
          type: string
          format: binary
          nullable: true
      xml:
        name: UserPhrase

    PhraseSubset:
      type: object
      properties:
        id:
          type: integer
          nullable: false
        description:
          type: string
          nullable: false
        phraseList:
          type: array
          nullable: false
          items:
            $ref: "#/components/schemas/Phrase"
      xml:
        name: PhraseSubset
    UserPhraseComment:
      type: object
      properties:
        id:
          type: integer
          nullable: false
        phraseId:
          type: integer
          nullable: true
        comment:
          type: string
          nullable: true
        dateTime:
          type: string
          format: date-time
          nullable: false
        userId:
          type: integer
          nullable: true
      xml:
        name: UserPhraseComment

    UserPhraseWithAudioContent:
      type: object
      properties:
        userPhrase:
          $ref: "#/components/schemas/UserPhrase"
        file:
          type: string
          format: byte
          nullable: true
      xml:
        name: UserPhraseWithAudioContent

    PhraseIdAndAudioContents:
      type: object
      properties:
        phraseId:
          type: integer
          nullable: true
        audioContents:
          type: string
          format: byte
          nullable: true
      xml:
        name: PhraseIdAndAudioContents

    PhraseIdAndExamplePath:
      type: object
      properties:
        phraseId:
          type: integer
          nullable: false
        exampleRecordingPath:
          type: string
          nullable: false
      xml:
        name: PhraseIdAndExamplePath

    UserPin:
      type: object
      properties:
        id:
          type: integer
          nullable: false
        userId:
          type: integer
          nullable: false
        pin:
          type: integer
          nullable: false
      xml:
        name: UserPin
    PhraseSubsetsPagedResponse:
      type: object
      properties:
        totalPages:
          type: integer
          nullable: false
        totalElements:
          type: integer
          nullable: false
        content:
          type: array
          nullable: false
          items:
            $ref: "#/components/schemas/PhraseSubset"
      xml:
        name: PhraseSubsetsPagedResponse
    PhraseList:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: "#/components/schemas/Phrase"
          nullable: false
      xml:
        name: PhraseList



